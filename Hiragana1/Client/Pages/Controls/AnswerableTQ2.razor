@using Hiragana1.Shared;
@using Hiragana1.Shared.DTOs;

@if (TestQuestion.Answers.Any())
{
        <div class="card mt-3">
            <div class="card-header text-center">
                <h5>Question @TestQuestion?.PositionNumber/@TotalQuestions</h5>
            </div>
            <div class="card-body">
                <div class="text-center text-primary-emphasis">
                    <h1>@TestQuestion?.Question</h1>
                </div>
                <div class="d-flex flex-row bd-highlight flex-wrap justify-content-between">
                @foreach (var answer in TestQuestion?.Answers)
                {
                            <button type="button" class="btn btn-info answerButton2 m-3"
                                    disabled="@IsThisAnswerDisabled(answer)"
                            @onclick="() => CompareAnswer(answer)">
                        @answer
                            </button>
                }
                </div>
            </div>
        @if (MistakesSoFar > 0)
        {
                    <div class="card-footer">
                        <h5>Mistakes: @MistakesSoFar</h5>
                    </div>
        }
        </div>
}
@code {

    [Parameter]
    public QuestionDto? TestQuestion { get; set; }
    [Parameter]
    public int MistakesSoFar { get; set; }
    [Parameter]
    public int TotalQuestions { get; set; }
    [Parameter] public EventCallback<bool> OnAnswer { get; set; }

    private List<string> UsedWrongAnswers;

    protected override void OnInitialized()
    {
        this.UsedWrongAnswers = new List<string>();
        base.OnInitialized();
    }

    private bool IsThisAnswerDisabled(string answer)
    {
        return this.UsedWrongAnswers.Any(x => x == answer);
    }

    private async Task CompareAnswer(string value)
    {
        bool isCorrectAnswer = string.Compare(value, this.TestQuestion?.CorrectAnswer, true) == 0;
        if (!isCorrectAnswer)
            UsedWrongAnswers.Add(value);
        await OnAnswer.InvokeAsync(isCorrectAnswer);
    }

    private async Task AnsweredCorrectly(bool isCorrect)
    {
        await OnAnswer.InvokeAsync(isCorrect);
    }
}



