@if (!TestInProgress)
{
    <div class="card">
        <div class="card-header">Select new quiz parameters:</div>
        <div class="card-body">
            <div class="g-3">
                <div class="form-group mt-2">
                    <label class="col-sm-4 col-form-label">Syllabary:HERE MAKE THESE FLOW BETTER</label>
                </div>
            </div>
            <div class="g-3 ml-2">
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(1))" value="0" id="en2ka" checked>
                    <label class="form-check-label" for="en2ka">
                        a? ア! Ask Transliteration answer in Katakana
                    </label>
                </div>
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(0))" value="1" id="en2hi">
                    <label class="form-check-label" for="en2hi">
                        a? あ! Ask Transliteration answer in Hiragana
                    </label>
                </div>
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(4))" value="4" id="hi2ka">
                    <label class="form-check-label" for="hi2ka">
                        あ? ア! Ask Hiragana answer in Katakana
                    </label>
                </div>
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(2))" value="2" id="hi2en">
                    <label class="form-check-label" for="hi2en">
                        あ? a! Ask Hiragana answer in Transliteration
                    </label>
                </div>
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(5))" value="5" id="ka2hi">
                    <label class="form-check-label" for="ka2hi">
                        ア? あ! Ask Katakana answer in Hiragana
                    </label>
                </div>
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(3))" value="3" id="ka2en">
                    <label class="form-check-label" for="ka2en">
                        ア? a! Ask Katakana answer in Transliteration
                    </label>
                </div>
                <div class="form-check form-check-inline col-auto">
                    <input class="form-check-input" type="radio" name="q" @onchange="@(() => UpdateQuizType(6))" value="6" id="mix">
                    <label class="form-check-label" for="mix">
                        Mix
                    </label>
                </div>
            </div>

            <div class="form-group row mt-2">
                <label for="typeNumber2" class="col-sm-9 col-form-label">Number of questions (3-50):</label>
                <div class="col-sm-3">
                    <input type="number" id="typeNumber2" min="3" max="50" @bind="@numberOfQuestions" />
                </div>
            </div>

            <div class="mt-2">
                <button class="btn btn-primary" @onclick="NotifyOfTestParameters">@StartNextButtonText()</button>
            </div>
        </div>
    </div>
}

@code {
    private int numberOfQuestions = 5;
    private int selectedQuizType = 1;

    [Parameter]
    public bool TestInProgress { get; set; }
    [Parameter] public EventCallback<SelectedQuizParametersDto> OnSelectionMade { get; set; }
    [Parameter] public bool IsAnother { get; set; }
    private void UpdateQuizType(int val)
    {
        this.selectedQuizType = val;
    }

    public async Task NotifyOfTestParameters()
    {
        var ret = new SelectedQuizParametersDto { NumberOfQuestions = numberOfQuestions, QuizType = (QuizType)selectedQuizType };
        await OnSelectionMade.InvokeAsync(ret);
    }

    private string SelectedQuizParameterSummary()
    {
        return $"a? ア!, {numberOfQuestions} questions.";
    }

    private string StartNextButtonText()
    {
        if (this.IsAnother) return "Start another quiz";
        return "Start quiz";
    }
}
